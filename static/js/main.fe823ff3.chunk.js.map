{"version":3,"sources":["redux/actions/dataActions.js","redux/types.js","util/MyButton.js","components/scream/DeleteScream.js","components/scream/LikeButton.js","components/scream/Comments.js","components/scream/CommentForm.js","components/scream/ScreamDialog.js","components/scream/Scream.js","redux/actions/userActions.js","components/profile/EditProfile.js","components/profile/Profile.js","pages/home.js","pages/login.js","pages/signup.js","components/scream/PostScream.js","components/layout/navbar.js","util/AuthRoute.js","components/profile/StaticProfile.js","pages/user.js","redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","App.js","serviceWorker.js","index.js","images/favicon.ico"],"names":["clearErrors","dispatch","type","children","onClick","tip","btnClassName","tipClassName","Tooltip","placement","title","className","IconButton","DeleteScream","state","open","handleOpen","setState","handleClose","deleteScream","props","screamId","classes","this","MyButton","deleteButton","color","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogActions","Button","Component","connect","axios","delete","then","payload","catch","err","console","log","withStyles","position","left","top","LikeButton","likedScream","user","likes","find","like","likeScream","unlikeScream","authenticated","to","React","mapActionsToProps","get","res","data","Comments","comments","Grid","container","map","comment","index","body","createdAt","userImage","userHandle","key","sm","style","marginLeft","item","xs","md","src","alt","commentImage","commentData","Typography","variant","component","Link","dayjs","format","invisibleSeparator","variabnt","length","visibleSeparator","theme","spreadThis","height","objectFit","borderRadius","CommentForm","errors","handleChange","event","target","name","value","handleSubmit","preventDefault","submitComment","nextProps","UI","loading","textAlign","onSubmit","TextField","label","error","helperText","onChange","textField","button","post","response","ScreamDialog","getScream","openDialog","scream","likeCount","commentCount","dialogMarkup","spinnerDiv","CircularProgress","size","thickness","spacing","profileImage","expandButton","closeButton","DialogContent","dialogContent","paddingRight","paddingTop","marginTop","marginBottom","Scream","extend","relativeTime","handle","credentials","Card","card","CardMedia","image","CardContent","content","fromNow","display","minWidth","padding","getUserData","logoutUser","localStorage","removeItem","defaults","headers","common","setAuthorizationHeader","token","FBIdToken","setItem","EditDetails","bio","website","location","mapUserDetailsToState","userDetails","editUserDetails","on","Close","tpye","multiline","rows","placeholder","form","margin","pageTitle","customError","fontSize","progress","float","Profile","handleImageChange","files","formData","FormData","append","uploadImage","handleEditPicture","document","getElementById","click","handleLogout","imageUrl","Paper","paper","profile","id","hidden","href","rel","EditProfile","align","buttons","width","verticalAlign","border","cursor","home","getScreams","screams","recentScreamsMarkup","login","e","userData","email","password","loginUser","history","AppIcon","action","noValidate","general","disabled","push","signup","newUserData","confirmPassword","signupUser","PostScream","postScream","submitButton","progressSpinner","prevState","newScream","navbar","AppBar","Toolbar","AuthRoute","rest","render","prototype","PropTypes","object","isRequired","screamIdParam","match","params","screamsMarkup","initalState","notifications","initialState","middleware","thunk","reducers","combineReducers","filter","findIndex","splice","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","CreateMuiTheme","palette","primary","light","main","dark","contrastText","secondary","typography","useNextVariants","borderBottom","baseURL","decodedToken","jwtDecode","exp","Date","now","App","exact","path","User","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","StrictMode","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.fe823ff3.chunk.js","sourcesContent":["import {\r\n    SET_SCREAMS,\r\n    LOADING_DATA,\r\n    LIKE_SCREAM,\r\n    UNLIKE_SCREAM,\r\n    DELETE_SCREAM,\r\n    SET_ERRORS,\r\n    POST_SCREAM,\r\n    CLEAR_ERRORS,\r\n    LOADING_UI,\r\n    SET_SCREAM,\r\n    STOP_LOADING_UI,\r\n    SUBMIT_COMMENT,\r\n} from '../types';\r\nimport axios from 'axios';\r\n//Get all screams\r\nexport const getScreams = () => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n\r\n    \r\n    axios\r\n        .get('/screams')\r\n        .then((res) => {\r\n            dispatch({\r\n                type: SET_SCREAMS,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: SET_SCREAMS,\r\n                payload: [],\r\n            });\r\n        });\r\n};\r\n//get single scream\r\nexport const getScream = (screamId) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios\r\n        .get(`/scream/${screamId}`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: SET_SCREAM,\r\n                payload: res.data,\r\n            });\r\n            dispatch({ type: STOP_LOADING_UI });\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n//post scream\r\nexport const postScream = (newScream) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios\r\n        .post(`/scream`, newScream)\r\n        .then((res) => {\r\n            dispatch({ type: POST_SCREAM, payload: res.data });\r\n            dispatch({ type: CLEAR_ERRORS });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: SET_ERRORS, payload: err.response.data });\r\n        });\r\n};\r\n//like a screams\r\nexport const likeScream = (screamId) => (dispatch) => {\r\n    axios\r\n        .get(`/scream/${screamId}/like`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: LIKE_SCREAM,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n};\r\n//unlike a screms\r\nexport const unlikeScream = (screamId) => (dispatch) => {\r\n    axios\r\n        .get(`/scream/${screamId}/unlike`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: UNLIKE_SCREAM,\r\n                payload: res.data,\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n};\r\n//delete scream\r\nexport const deleteScream = (screamId) => (dispatch) => {\r\n    axios\r\n        .delete(`/scream/${screamId}`)\r\n        .then(() => {\r\n            dispatch({\r\n                type: DELETE_SCREAM,\r\n                payload: screamId,\r\n            });\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\nexport const clearErrors = () => (dispatch) => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n};\r\n//Submit Comment\r\nexport const submitComment = (screamId, commentData) => (dispatch) => {\r\n    axios\r\n        .post(`/scream/${screamId}/comment`, commentData)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: SUBMIT_COMMENT,\r\n                payload: res.data,\r\n            });\r\n            dispatch(clearErrors());\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: SET_ERRORS, payload: err.response.data });\r\n        });\r\n};\r\n//USer Page\r\nexport const getUserData = (userHandle) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios\r\n        .get(`/user/${userHandle}`)\r\n        .then((res) => {\r\n            dispatch({ type: SET_SCREAMS, payload: res.data.screams });\r\n        })\r\n        .catch(() => {\r\n            dispatch({ type: SET_SCREAMS, payload: null });\r\n        });\r\n};\r\n","// User reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ';\r\n// UI reducer types\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\r\n// Data reducer types\r\nexport const SET_SCREAMS = 'SET_SCREAMS';\r\nexport const SET_SCREAM = 'SET_SCREAM';\r\nexport const LIKE_SCREAM = 'LIKE_SCREAM';\r\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM';\r\nexport const DELETE_SCREAM = 'DELETE_SCREAM';\r\nexport const POST_SCREAM = 'POST_SCREAM';\r\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';\r\n","import React from 'react';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default ({ children, onClick, tip, btnClassName, tipClassName }) => (\r\n    <Tooltip placement='top' title={tip} className={tipClassName}>\r\n        <IconButton onClick={onClick} className={btnClassName}>\r\n            {children}\r\n        </IconButton>\r\n    </Tooltip>\r\n);\r\n","import React, { Component, Fragment } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\n// MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { deleteScream } from '../../redux/actions/dataActions';\r\nconst styles = {\r\n    deleteButton: {\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '10%',\r\n    },\r\n};\r\n\r\nexport class DeleteScream extends Component {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    deleteScream = () => {\r\n        this.props.deleteScream(this.props.screamId);\r\n\r\n        this.setState({ open: false });\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <MyButton\r\n                    onClick={this.handleOpen}\r\n                    tip='delete scream'\r\n                    btnClassName={classes.deleteButton}\r\n                >\r\n                    <DeleteOutline color='secondary' />\r\n                </MyButton>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth='sm'\r\n                >\r\n                    <DialogTitle>\r\n                        Are you sure you want to delete this scream ?\r\n                    </DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color='primary'>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.deleteScream} color='secondary'>\r\n                            Delete\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nDeleteScream.propTypes = {\r\n    deleteScream: PropTypes.func.isRequired,\r\n\r\n    classes: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteScream })(\r\n    withStyles(styles)(DeleteScream)\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { likeScream, unlikeScream } from '../../redux/actions/dataActions';\r\nimport MyButton from '../../util/MyButton';\r\n\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nclass LikeButton extends React.Component {\r\n    likedScream = () => {\r\n        if (\r\n            this.props.user.likes &&\r\n            this.props.user.likes.find(\r\n                (like) => like.screamId === this.props.screamId\r\n            )\r\n        )\r\n            return true;\r\n        else return false;\r\n    };\r\n    likeScream = () => {\r\n        this.props.likeScream(this.props.screamId);\r\n    };\r\n    unlikeScream = () => {\r\n        this.props.unlikeScream(this.props.screamId);\r\n    };\r\n\r\n    render() {\r\n        const { authenticated } = this.props.user;\r\n\r\n        const bhavin = !authenticated ? (\r\n            <Link to='/login'>\r\n                <MyButton tip='Like'>\r\n                    <FavoriteBorder color='primary' />\r\n                </MyButton>\r\n            </Link>\r\n        ) : this.likedScream() ? (\r\n            <MyButton tip='Undo like' onClick={this.unlikeScream}>\r\n                <FavoriteIcon color='primary' />\r\n            </MyButton>\r\n        ) : (\r\n            <MyButton tip='Like' onClick={this.likeScream}>\r\n                <FavoriteBorder color='primary' />\r\n            </MyButton>\r\n        );\r\n        return bhavin;\r\n    }\r\n}\r\nLikeButton.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    likeScream: PropTypes.func.isRequired,\r\n    unlikeScream: PropTypes.func.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n});\r\nconst mapActionsToProps = {\r\n    likeScream,\r\n    unlikeScream,\r\n};\r\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n// MUI\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport theme from '../../util/theme';\r\nconst styles = (theme) => ({\r\n    ...theme.spreadThis,\r\n    commentImage: {\r\n        maxWidth: '100%',\r\n        height: 100,\r\n        objectFit: 'cover',\r\n        borderRadius: '50%',\r\n    },\r\n    commentData: {\r\n        marginLeft: 20,\r\n    },\r\n});\r\n\r\nclass Comments extends Component {\r\n    render() {\r\n        const { comments, classes } = this.props;\r\n\r\n        return (\r\n            <Grid container>\r\n                {comments.map((comment, index) => {\r\n                    const { body, createdAt, userImage, userHandle } = comment;\r\n                    return (\r\n                        <Fragment key={createdAt}>\r\n                            <Grid sm={12} style={{ marginLeft: '10%' }}>\r\n                                <Grid container>\r\n                                    <Grid item xs={12} sm={12} md={2}>\r\n                                        <img\r\n                                            src={userImage}\r\n                                            alt='comment'\r\n                                            className={classes.commentImage}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={12} md={9}>\r\n                                        <div className={classes.commentData}>\r\n                                            <Typography\r\n                                                variant='h5'\r\n                                                component={Link}\r\n                                                to={`/users/${userHandle}`}\r\n                                                color='primary'\r\n                                            >\r\n                                                {userHandle}\r\n                                            </Typography>\r\n                                            <Typography\r\n                                                variant='body2'\r\n                                                color='textSecondary'\r\n                                            >\r\n                                                {dayjs(createdAt).format(\r\n                                                    'h:mm a, MMMM DD YYYY'\r\n                                                )}\r\n                                            </Typography>\r\n                                            <hr\r\n                                                className={\r\n                                                    classes.invisibleSeparator\r\n                                                }\r\n                                            />\r\n                                            <Typography variabnt='body1'>\r\n                                                {body}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {index !== comments.length - 1 && (\r\n                                <hr className={classes.visibleSeparator} />\r\n                            )}\r\n                        </Fragment>\r\n                    );\r\n                })}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nComments.propTypes = {\r\n    comments: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Comments);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n// MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { submitComment } from '../../redux/actions/dataActions';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.spreadThis,\r\n});\r\n\r\nclass CommentForm extends Component {\r\n    state = {\r\n        body: '',\r\n        errors: {},\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors });\r\n        }\r\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n            this.setState({ body: '' });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.submitComment(this.props.screamId, {\r\n            body: this.state.body,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes, authenticated } = this.props;\r\n        const errors = this.state.errors;\r\n\r\n        const commentFormMarkup = authenticated ? (\r\n            <Grid item sm={12} style={{ textAlign: 'center' }}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField\r\n                        name='body'\r\n                        type='text'\r\n                        label='Comment on scream'\r\n                        error={errors.comment ? true : false}\r\n                        helperText={errors.comment}\r\n                        value={this.state.body}\r\n                        onChange={this.handleChange}\r\n                        fullWidth\r\n                        className={classes.textField}\r\n                    />\r\n                    <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        color='primary'\r\n                        className={classes.button}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n                <hr className={classes.visibleSeparator} />\r\n            </Grid>\r\n        ) : null;\r\n        return commentFormMarkup;\r\n    }\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    submitComment: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    authenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n    authenticated: state.user.authenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { submitComment })(\r\n    withStyles(styles)(CommentForm)\r\n);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\nimport LikeButton from './LikeButton';\r\n// MUI Stuff\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n// Icons\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport UnfoldMore from '@material-ui/icons/UnfoldMore';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { getScream, clearErrors } from '../../redux/actions/dataActions';\r\nimport Comments from './Comments';\r\nimport CommentForm from './CommentForm';\r\n\r\nconst styles = {\r\n    profileImage: {\r\n        maxWidth: 200,\r\n        height: 200,\r\n        borderRadius: '50%',\r\n        objectFit: 'cover',\r\n    },\r\n    dialogContent: {\r\n        paddingRight: 45,\r\n        paddingTop: 20,\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '90%',\r\n    },\r\n    expandButton: {\r\n        position: 'absolute',\r\n        left: '90%',\r\n    },\r\n    spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50,\r\n    },\r\n};\r\n\r\nclass ScreamDialog extends Component {\r\n    state = {\r\n        open: false,\r\n        // oldPath: '',\r\n        // newPath: '',\r\n    };\r\n    componentDidMount() {\r\n        if (this.props.openDialog) {\r\n            this.handleOpen();\r\n        }\r\n    }\r\n    handleOpen = () => {\r\n        // let oldPath = window.location.pathname;\r\n\r\n        // const { userHandle, screamId } = this.props;\r\n        // const newPath = `/users/${userHandle}/scream/${screamId}`;\r\n\r\n        // if (oldPath === newPath) oldPath = `/users/${userHandle}`;\r\n\r\n        // window.history.pushState(null, null, newPath);\r\n\r\n        this.setState({ open: true });\r\n        this.props.getScream(this.props.screamId);\r\n    };\r\n    handleClose = () => {\r\n        //      window.history.pushState(null, null, this.state.oldPath);\r\n        this.setState({ open: false });\r\n        this.props.clearErrors();\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            scream: {\r\n                screamId,\r\n                body,\r\n                createdAt,\r\n                likeCount,\r\n                commentCount,\r\n                userImage,\r\n                userHandle,\r\n                comments,\r\n            },\r\n            UI: { loading },\r\n        } = this.props;\r\n\r\n        const dialogMarkup = loading ? (\r\n            <div className={classes.spinnerDiv}>\r\n                <CircularProgress size={200} thickness={2} />\r\n            </div>\r\n        ) : (\r\n            <Grid container spacing={10}>\r\n                <Grid item sm={5}>\r\n                    <img\r\n                        src={userImage}\r\n                        alt='Profile'\r\n                        className={classes.profileImage}\r\n                    />\r\n                </Grid>\r\n                <Grid item sm={7}>\r\n                    <Typography\r\n                        component={Link}\r\n                        color='primary'\r\n                        variant='h5'\r\n                        to={`/users/${userHandle}`}\r\n                    >\r\n                        @{userHandle}\r\n                    </Typography>\r\n                    <hr className={classes.invisibleSeparator} />\r\n                    <Typography variant='body2' color='textSecondary'>\r\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                    </Typography>\r\n                    <hr className={classes.invisibleSeparator} />\r\n                    <Typography variant='body1'>{body}</Typography>\r\n\r\n                    <span>\r\n                        <LikeButton screamId={screamId} /> {likeCount} likes\r\n                    </span>\r\n                    <MyButton tip='comments'>\r\n                        <ChatIcon color='primary' />\r\n                    </MyButton>\r\n                    <span>{commentCount} comments</span>\r\n                </Grid>\r\n                <hr className={classes.visibleSeparator} />\r\n                <CommentForm screamId={screamId} />\r\n                <Comments comments={comments} />\r\n            </Grid>\r\n        );\r\n        return (\r\n            <Fragment>\r\n                <MyButton\r\n                    onClick={this.handleOpen}\r\n                    tip='Expand scream'\r\n                    tipClassName={classes.expandButton}\r\n                >\r\n                    <UnfoldMore color='primary' />\r\n                </MyButton>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth='sm'\r\n                >\r\n                    <MyButton\r\n                        tip='Close'\r\n                        onClick={this.handleClose}\r\n                        tipClassName={classes.closeButton}\r\n                    >\r\n                        <CloseIcon />\r\n                    </MyButton>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nScreamDialog.propTypes = {\r\n    clearErrors: PropTypes.func,\r\n    getScream: PropTypes.func.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    userHandle: PropTypes.string.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    scream: state.data.scream,\r\n    UI: state.UI,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    getScream,\r\n    clearErrors,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(withStyles(styles)(ScreamDialog));\r\n","import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport MyButton from '../../util/MyButton';\r\nimport DeleteScream from './DeleteScream';\r\nimport ScreamDialog from './ScreamDialog';\r\n//Icon\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\nimport LikeButton from './LikeButton';\r\nimport { red } from '@material-ui/core/colors';\r\nconst styles = {\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20,\r\n    },\r\n    image: {\r\n        minWidth: 200,\r\n    },\r\n\r\n    content: {\r\n        padding: 25,\r\n        objectFit: 'cover',\r\n    },\r\n};\r\n\r\nclass Scream extends Component {\r\n    render() {\r\n        dayjs.extend(relativeTime);\r\n        const {\r\n            authenticated,\r\n            credentials: { handle },\r\n        } = this.props.user;\r\n        const {\r\n            classes,\r\n            scream: {\r\n                body,\r\n                createdAt,\r\n                userImage,\r\n                userHandle,\r\n                screamId,\r\n                likeCount,\r\n                commentCount,\r\n            },\r\n        } = this.props;\r\n\r\n        const deleteButton =\r\n            authenticated && userHandle === handle ? (\r\n                <DeleteScream screamId={screamId} />\r\n            ) : null;\r\n        return (\r\n            <Card className={classes.card}>\r\n                <CardMedia\r\n                    image={userImage}\r\n                    title='Profile image'\r\n                    className={classes.image}\r\n                />\r\n                <CardContent className={classes.content}>\r\n                    <Typography\r\n                        variant='h5'\r\n                        component={Link}\r\n                        to={`/users/${userHandle}`}\r\n                        color='primary'\r\n                    >\r\n                        {userHandle}\r\n                    </Typography>\r\n                    {deleteButton}\r\n                    <Typography variant='body2' color='textSecondary'>\r\n                        {dayjs(createdAt).fromNow()}\r\n                    </Typography>\r\n                    <Typography variant='body1'>{body}</Typography>\r\n                    <LikeButton screamId={screamId} />\r\n                    <span>{likeCount} Likes</span>\r\n                    <MyButton tip='comments'>\r\n                        <ChatIcon color='primary' />\r\n                    </MyButton>\r\n                    <span>{commentCount} comments</span>\r\n                    <ScreamDialog\r\n                        screamId={screamId}\r\n                        userHandle={userHandle}\r\n                        openDialog={this.props.openDialog}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nScream.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n});\r\nexport default connect(mapStateToProps, null)(withStyles(styles)(Scream));\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n    SET_USER,\r\n    SET_ERRORS,\r\n    CLEAR_ERRORS,\r\n    LOADING_UI,\r\n    SET_UNAUTHENTICATED,\r\n    LOADING_USER,\r\n} from '../types';\r\nimport axios from 'axios';\r\nexport const loginUser = (userData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios\r\n        .post('/login', userData)\r\n        .then((res) => {\r\n            setAuthorizationHeader(res.data.token);\r\n            dispatch(getUserData());\r\n            dispatch({ type: CLEAR_ERRORS });\r\n            history.push('/');\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data,\r\n            });\r\n        });\r\n};\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.get('/user').then((res) => {\r\n        dispatch({\r\n            type: SET_USER,\r\n            payload: res.data,\r\n        });\r\n    });\r\n};\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem('FBIdToken');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    dispatch({ type: SET_UNAUTHENTICATED });\r\n};\r\nexport const signupUser = (newUserData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios\r\n        .post('/signup', newUserData)\r\n        .then((res) => {\r\n            setAuthorizationHeader(res.data.token);\r\n            dispatch(getUserData());\r\n            dispatch({ type: CLEAR_ERRORS });\r\n            history.push('/');\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data,\r\n            });\r\n        });\r\n};\r\nconst setAuthorizationHeader = (token) => {\r\n    const FBIdToken = `Bearer ${token}`;\r\n    localStorage.setItem('FBIdToken', FBIdToken);\r\n    axios.defaults.headers.common['Authorization'] = FBIdToken;\r\n};\r\n\r\nexport const uploadImage = (formData) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios\r\n        .post('/user/image', formData)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n\r\nexport const editUserDetails = (userDetails) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios\r\n        .post('/user', userDetails)\r\n        .then(() => {\r\n            dispatch(getUserData());\r\n        })\r\n        .catch((err) => console.log(err));\r\n};\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { editUserDetails } from '../../redux/actions/userActions';\r\n// MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Icons\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = {\r\n    form: {\r\n        textAlign: 'center',\r\n    },\r\n    image: {\r\n        margin: '20px auto 20px auto',\r\n    },\r\n    pageTitle: {\r\n        margin: '10px auto 10px auto',\r\n    },\r\n    textField: {\r\n        margin: '10px auto 10px auto',\r\n    },\r\n\r\n    customError: {\r\n        color: 'red',\r\n        fontSize: '0.8rem',\r\n        marginTop: 10,\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n    },\r\n    button: {\r\n        float: 'right',\r\n    },\r\n};\r\nclass EditDetails extends Component {\r\n    state = {\r\n        bio: '',\r\n        website: '',\r\n        location: '',\r\n        open: false,\r\n    };\r\n    mapUserDetailsToState = (credentials) => {\r\n        this.setState({\r\n            bio: credentials.bio ? credentials.bio : '',\r\n            website: credentials.website ? credentials.website : '',\r\n            location: credentials.location ? credentials.location : '',\r\n        });\r\n    };\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n        this.mapUserDetailsToState(this.props.credentials);\r\n    };\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n    componentDidMount() {\r\n        const { credentials } = this.props;\r\n        this.mapUserDetailsToState(credentials);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n    handleSubmit = () => {\r\n        const userDetails = {\r\n            bio: this.state.bio,\r\n            website: this.state.website,\r\n            location: this.state.location,\r\n        };\r\n        console.log(userDetails);\r\n        this.props.editUserDetails(userDetails);\r\n        this.handleClose();\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <Tooltip title='Edit Details' placement='top'>\r\n                    <IconButton\r\n                        onClick={this.handleOpen}\r\n                        className={classes.button}\r\n                    >\r\n                        <EditIcon color='primary' />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    on\r\n                    Close={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth='sm'\r\n                >\r\n                    <DialogTitle>Edit your details</DialogTitle>\r\n                    <DialogContent>\r\n                        <form>\r\n                            <TextField\r\n                                name='bio'\r\n                                tpye='text'\r\n                                label='Bio'\r\n                                multiline\r\n                                rows='3'\r\n                                placeholder='A short bio about yourself'\r\n                                className={classes.textField}\r\n                                value={this.state.bio}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                name='website'\r\n                                tpye='text'\r\n                                label='Website'\r\n                                placeholder='Your personal/professinal website'\r\n                                className={classes.textField}\r\n                                value={this.state.website}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                            />\r\n                            <TextField\r\n                                name='location'\r\n                                tpye='text'\r\n                                label='Location'\r\n                                placeholder='Where you live'\r\n                                className={classes.textField}\r\n                                value={this.state.location}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color='primary'>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button onClick={this.handleSubmit} color='primary'>\r\n                            Save\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n    editUserDetails: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    credentials: state.user.credentials,\r\n});\r\n\r\nexport default connect(mapStateToProps, { editUserDetails })(\r\n    withStyles(styles)(EditDetails)\r\n);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\n//MUI\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MuiLink from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n//Icon\r\nimport LocationOn from \"@material-ui/icons/LocationOn\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport KeyboardReturn from \"@material-ui/icons/KeyboardReturn\";\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser, uploadImage } from \"../../redux/actions/userActions\";\r\nimport EditProfile from \"./EditProfile\";\r\nconst style = {\r\n  paper: {\r\n    padding: 20,\r\n  },\r\n  profile: {\r\n    \"& .image-wrapper\": {\r\n      textAlign: \"center\",\r\n      position: \"relative\",\r\n      \"& button\": {\r\n        position: \"absolute\",\r\n        top: \"80%\",\r\n        left: \"70%\",\r\n      },\r\n    },\r\n    \"& .profile-image\": {\r\n      width: 200,\r\n      height: 200,\r\n      objectFit: \"cover\",\r\n      maxWidth: \"100%\",\r\n      borderRadius: \"50%\",\r\n    },\r\n    \"& .profile-details\": {\r\n      textAlign: \"center\",\r\n      \"& span, svg\": {\r\n        verticalAlign: \"middle\",\r\n      },\r\n      \"& a\": {\r\n        color: \"#00bcd4\",\r\n      },\r\n    },\r\n    \"& hr\": {\r\n      border: \"none\",\r\n      margin: \"0 0 10px 0\",\r\n    },\r\n    \"& svg.button\": {\r\n      \"&:hover\": {\r\n        cursor: \"pointer\",\r\n      },\r\n    },\r\n  },\r\n  buttons: {\r\n    textAlign: \"center\",\r\n    \"& a\": {\r\n      margin: \"20px 10px\",\r\n    },\r\n  },\r\n};\r\nclass Profile extends Component {\r\n  handleImageChange = (event) => {\r\n    const image = event.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", image, image.name);\r\n    this.props.uploadImage(formData);\r\n  };\r\n  handleEditPicture = () => {\r\n    const fileInput = document.getElementById(\"imageInput\");\r\n    fileInput.click();\r\n  };\r\n  handleLogout = () => {\r\n    this.props.logoutUser();\r\n  };\r\n  render() {\r\n    const {\r\n      classes,\r\n      user: {\r\n        credentials: { handle, createdAt, imageUrl, bio, website, location },\r\n        loading,\r\n        authenticated,\r\n      },\r\n    } = this.props;\r\n\r\n    let profileMarkup = !loading ? (\r\n      authenticated ? (\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.profile}>\r\n            <div className=\"image-wrapper\">\r\n              <img src={imageUrl} alt=\"profile\" className=\"profile-image\" />\r\n              <input\r\n                type=\"file\"\r\n                id=\"imageInput\"\r\n                hidden=\"hidden\"\r\n                onChange={this.handleImageChange}\r\n              />\r\n\r\n              <Tooltip title=\"Edit Profile Image\" placement=\"top\">\r\n                <IconButton onClick={this.handleEditPicture} className=\"button\">\r\n                  <EditIcon color=\"primary\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </div>\r\n            <hr />\r\n            <div className=\"profile-details\">\r\n              <MuiLink\r\n                component={Link}\r\n                to={`/users/${handle}`}\r\n                color=\"primary\"\r\n                variant=\"h5\"\r\n              >\r\n                @{handle}\r\n              </MuiLink>\r\n              <hr />\r\n              {bio && <Typography variant=\"body2\">{bio}</Typography>}\r\n              <hr />\r\n              {location && (\r\n                <Fragment>\r\n                  <LocationOn color=\"primary\" /> <span>{location}</span>\r\n                  <hr />\r\n                </Fragment>\r\n              )}\r\n              {website && (\r\n                <Fragment>\r\n                  <LinkIcon color=\"primary\" />\r\n                  <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {\" \"}\r\n                    {website}\r\n                  </a>\r\n                  <hr />\r\n                </Fragment>\r\n              )}\r\n              <CalendarToday color=\"primary\" />{\" \"}\r\n              <span>Joined {dayjs(createdAt).format(\"MMM YYYY\")}</span>\r\n            </div>\r\n\r\n            <Tooltip title=\"Logout\" placement=\"top\">\r\n              <IconButton onClick={this.handleLogout} className=\"button\">\r\n                <KeyboardReturn color=\"primary\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <EditProfile />\r\n          </div>\r\n        </Paper>\r\n      ) : (\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"body2\" align=\"center\">\r\n            No profile found, please login again\r\n          </Typography>\r\n          <div className={classes.buttons}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              component={Link}\r\n              to=\"/login\"\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              component={Link}\r\n              to=\"/signup\"\r\n            >\r\n              Signup\r\n            </Button>\r\n          </div>\r\n        </Paper>\r\n      )\r\n    ) : (\r\n      <p>Loading</p>\r\n    );\r\n    return profileMarkup;\r\n  }\r\n}\r\nconst mapActionsToProps = { logoutUser, uploadImage };\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\nProfile.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  uploadImage: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(style)(Profile));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getScreams } from '../redux/actions/dataActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Scream from '../components/scream/Scream';\r\nimport Profile from '../components/profile/Profile';\r\nimport Comments from '../components/scream/Comments';\r\nclass home extends Component {\r\n  componentDidMount() {\r\n    this.props.getScreams();\r\n  }\r\n  render() {\r\n    const { screams, loading } = this.props.data;\r\n    let recentScreamsMarkup = !loading ? (\r\n      screams.map((scream) => <Scream key={scream.screamId} scream={scream} />)\r\n    ) : (\r\n      <p>Loading...</p>\r\n    );\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item sm={8} xs={12}>\r\n          {recentScreamsMarkup}\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          <Profile />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nhome.propTypes = {\r\n  getScreams: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data,\r\n});\r\nexport default connect(mapStateToProps, { getScreams })(home);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/favicon.ico';\r\nimport { Link } from 'react-router-dom';\r\n//MUI Stuff\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../redux/actions/userActions';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.spreadThis,\r\n});\r\n\r\nclass login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      errors: {},\r\n    };\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.UI.errors) {\r\n      this.setState({ errors: nextProps.UI.errors });\r\n    }\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    this.props.loginUser(userData, this.props.history);\r\n    console.log(this.state.errors);\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      UI: { loading },\r\n    } = this.props;\r\n    const { errors } = this.state;\r\n    return (\r\n      <Grid container className={classes.form}>\r\n        <Grid item sm></Grid>\r\n\r\n        <Grid item sm>\r\n          <img src={AppIcon} alt=\"Monkey\" className={classes.image} />\r\n          <Typography variant=\"h2\" className={classes.pageTitle}>\r\n            Login\r\n          </Typography>\r\n          <form action=\"\" noValidate onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              className={classes.TextField}\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n              helperText={errors.email}\r\n              error={errors.email ? true : false}\r\n            ></TextField>\r\n            <TextField\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              className={classes.TextField}\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n              helperText={errors.password}\r\n              error={errors.password ? true : false}\r\n            ></TextField>\r\n            {errors.general && (\r\n              <Typography variant=\"body2\" className={classes.customError}>\r\n                {errors.general}\r\n              </Typography>\r\n            )}\r\n            <Button\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              className={classes.button}\r\n              disabled={loading}\r\n            >\r\n              Login\r\n              {loading && (\r\n                <CircularProgress\r\n                  color=\"primary\"\r\n                  className={classes.progress}\r\n                  size={30}\r\n                ></CircularProgress>\r\n              )}\r\n            </Button>\r\n            <br />\r\n            <small>\r\n              dont have account ? sign up\r\n              <Link to=\"/signup\"> here</Link>\r\n            </small>\r\n          </form>\r\n        </Grid>\r\n        <Grid item sm></Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nlogin.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  loginUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  UI: state.UI,\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  loginUser,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(login));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/favicon.ico';\r\nimport { Link } from 'react-router-dom';\r\n//MUI Stuff\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { signupUser } from '../redux/actions/userActions';\r\n// const style = {\r\n//     form: {\r\n//         textAlign: 'center',\r\n//     },\r\n//     image: {\r\n//         margin: '20px auto 20px auto',\r\n//     },\r\n//     pageTitle: {\r\n//         margin: '10px auto 10px auto',\r\n//     },\r\n//     textField: {\r\n//         margin: '10px auto 10px auto',\r\n//     },\r\n//     button: {\r\n//         marginTop: '10px',\r\n//         position: 'relative',\r\n//     },\r\n//     customError: {\r\n//         color: 'red',\r\n//         fontSize: '0.8rem',\r\n//         marginTop: 10,\r\n//     },\r\n//     progress: {\r\n//         position: 'absolute',\r\n//     },\r\n// };\r\nconst styles = (theme) => ({\r\n    ...theme.spreadThis,\r\n});\r\nclass signup extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            handle: '',\r\n            errors: {},\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors });\r\n        }\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ loading: true });\r\n        const newUserData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle,\r\n        };\r\n        this.props.signupUser(newUserData, this.props.history);\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            classes,\r\n            UI: { loading },\r\n        } = this.props;\r\n        const { errors } = this.state;\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm></Grid>\r\n                <Grid item sm>\r\n                    <img src={AppIcon} alt='Monkey' className={classes.image} />\r\n                    <Typography variant='h2' className={classes.pageTitle}>\r\n                        Sign Up\r\n                    </Typography>\r\n                    <form action='' noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField\r\n                            id='email'\r\n                            name='email'\r\n                            type='email'\r\n                            label='Email'\r\n                            className={classes.TextField}\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                        ></TextField>\r\n                        <TextField\r\n                            id='password'\r\n                            name='password'\r\n                            type='password'\r\n                            label='Password'\r\n                            className={classes.TextField}\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            helperText={errors.password}\r\n                            error={errors.password ? true : false}\r\n                        ></TextField>\r\n                        <TextField\r\n                            id='confirmPassword'\r\n                            name='confirmPassword'\r\n                            type='password'\r\n                            label='Confirm Password'\r\n                            className={classes.TextField}\r\n                            value={this.state.confirmPassword}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            helperText={errors.confirmPassword}\r\n                            error={errors.confirmPassword ? true : false}\r\n                        ></TextField>\r\n                        <TextField\r\n                            id='handle'\r\n                            name='handle'\r\n                            type='text'\r\n                            label='Handle'\r\n                            className={classes.TextField}\r\n                            value={this.state.handle}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                            helperText={errors.handle}\r\n                            error={errors.handle ? true : false}\r\n                        ></TextField>\r\n                        {errors.general && (\r\n                            <Typography\r\n                                variant='body2'\r\n                                className={classes.customError}\r\n                            >\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button\r\n                            color='primary'\r\n                            type='submit'\r\n                            variant='contained'\r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >\r\n                            SignUp\r\n                            {loading && (\r\n                                <CircularProgress\r\n                                    color='primary'\r\n                                    className={classes.progress}\r\n                                    size={30}\r\n                                ></CircularProgress>\r\n                            )}\r\n                        </Button>\r\n                        <br />\r\n                        <small>\r\n                            already have account ? login\r\n                            <Link to='/login'> here</Link>\r\n                        </small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm></Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\nsignup.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    signupUser: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signupUser })(\r\n    withStyles(styles)(signup)\r\n);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MyButton from '../../util/MyButton';\r\n// MUI Stuff\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n// Redux stuff\r\nimport { connect } from 'react-redux';\r\nimport { postScream, clearErrors } from '../../redux/actions/dataActions';\r\n\r\nconst styles = {\r\n    form: {\r\n        textAlign: 'center',\r\n    },\r\n    image: {\r\n        margin: '20px auto 20px auto',\r\n    },\r\n    pageTitle: {\r\n        margin: '10px auto 10px auto',\r\n    },\r\n    textField: {\r\n        margin: '10px auto 10px auto',\r\n    },\r\n    button: {\r\n        marginTop: '10px',\r\n        position: 'relative',\r\n    },\r\n    customError: {\r\n        color: 'red',\r\n        fontSize: '0.8rem',\r\n        marginTop: 10,\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n    },\r\n    submitButton: {\r\n        position: 'relative',\r\n        float: 'right',\r\n        marginTop: 10,\r\n    },\r\n    progressSpinner: {\r\n        position: 'absolute',\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '91%',\r\n        top: '6%',\r\n    },\r\n};\r\n\r\nclass PostScream extends Component {\r\n    state = {\r\n        open: false,\r\n        body: '',\r\n        errors: {},\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.UI.errors) {\r\n            return { errors: nextProps.UI.errors };\r\n        } else return null;\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n    handleClose = () => {\r\n        this.props.clearErrors();\r\n        this.setState({ open: false, errors: {} });\r\n    };\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.postScream({ body: this.state.body });\r\n        this.handleClose();\r\n    };\r\n    render() {\r\n        const { errors } = this.state;\r\n        const {\r\n            classes,\r\n            UI: { loading },\r\n        } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <MyButton onClick={this.handleOpen} tip='Post a Scream!'>\r\n                    <AddIcon />\r\n                </MyButton>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    fullWidth\r\n                    maxWidth='sm'\r\n                >\r\n                    <MyButton\r\n                        tip='Close'\r\n                        onClick={this.handleClose}\r\n                        tipClassName={classes.closeButton}\r\n                    >\r\n                        <CloseIcon />\r\n                    </MyButton>\r\n                    <DialogTitle>Post a new scream</DialogTitle>\r\n                    <DialogContent>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <TextField\r\n                                name='body'\r\n                                type='text'\r\n                                label='SCREAM!!'\r\n                                multiline\r\n                                rows='3'\r\n                                placeholder='Scream at your fellow apes'\r\n                                error={errors.body ? true : false}\r\n                                helperText={errors.body}\r\n                                className={classes.textField}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                            />\r\n                            <Button\r\n                                type='submit'\r\n                                variant='contained'\r\n                                color='primary'\r\n                                className={classes.submitButton}\r\n                                disabled={loading}\r\n                            >\r\n                                Submit\r\n                                {loading && (\r\n                                    <CircularProgress\r\n                                        size={30}\r\n                                        className={classes.progressSpinner}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nPostScream.propTypes = {\r\n    postScream: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n});\r\n\r\nexport default connect(mapStateToProps, { postScream, clearErrors })(\r\n    withStyles(styles)(PostScream)\r\n);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBar, Toolbar, Button } from '@material-ui/core';\r\nimport PropType from 'prop-types';\r\nimport PostScream from '../scream/PostScream';\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport MyButton from '../../util/MyButton';\r\n//Icon\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nclass navbar extends Component {\r\n    render() {\r\n        const { authenticated } = this.props;\r\n\r\n        return (\r\n            <AppBar position='fixed'>\r\n                <Toolbar className='nav-container'>\r\n                    {authenticated ? (\r\n                        <Fragment>\r\n                            <PostScream />\r\n                            <Link to='/'>\r\n                                <MyButton tip='Home'>\r\n                                    <HomeIcon color='primary'></HomeIcon>\r\n                                </MyButton>\r\n                            </Link>\r\n                            <MyButton tip='Notifications'>\r\n                                <NotificationsIcon color='primary'></NotificationsIcon>\r\n                            </MyButton>\r\n                        </Fragment>\r\n                    ) : (\r\n                        <Fragment>\r\n                            <Button color='inherit' component={Link} to='/'>\r\n                                Home\r\n                            </Button>\r\n                            <Button\r\n                                color='inherit'\r\n                                component={Link}\r\n                                to='/login'\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                            <Button\r\n                                color='inherit'\r\n                                component={Link}\r\n                                to='/signup'\r\n                            >\r\n                                SignUp\r\n                            </Button>\r\n                        </Fragment>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n}\r\nnavbar.propTypes = {\r\n    authenticated: PropType.bool.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated,\r\n});\r\nexport default connect(mapStateToProps)(navbar);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            authenticated === true ? (\r\n                <Redirect to='/' />\r\n            ) : (\r\n                <Component {...props} />\r\n            )\r\n        }\r\n    ></Route>\r\n);\r\nAuthRoute.prototype = {\r\n    user: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated,\r\n});\r\nexport default connect(mapStateToProps)(AuthRoute);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\n// MUI\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n// Icons\r\nimport LocationOn from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarToday from '@material-ui/icons/CalendarToday';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.spreadThis,\r\n});\r\n\r\nconst StaticProfile = (props) => {\r\n    const {\r\n        classes,\r\n        profile: { handle, createdAt, imageUrl, bio, website, location },\r\n    } = props;\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className='image-wrapper'>\r\n                    <img\r\n                        src={imageUrl}\r\n                        alt='profile'\r\n                        className='profile-image'\r\n                    />\r\n                </div>\r\n                <hr />\r\n                <div className='profile-details'>\r\n                    <MuiLink\r\n                        component={Link}\r\n                        to={`/users/${handle}`}\r\n                        color='primary'\r\n                        variant='h5'\r\n                    >\r\n                        @{handle}\r\n                    </MuiLink>\r\n                    <hr />\r\n                    {bio && <Typography variant='body2'>{bio}</Typography>}\r\n                    <hr />\r\n                    {location && (\r\n                        <Fragment>\r\n                            <LocationOn color='primary' />{' '}\r\n                            <span>{location}</span>\r\n                            <hr />\r\n                        </Fragment>\r\n                    )}\r\n                    {website && (\r\n                        <Fragment>\r\n                            <LinkIcon color='primary' />\r\n                            <a\r\n                                href={website}\r\n                                target='_blank'\r\n                                rel='noopener noreferrer'\r\n                            >\r\n                                {' '}\r\n                                {website}\r\n                            </a>\r\n                            <hr />\r\n                        </Fragment>\r\n                    )}\r\n                    <CalendarToday color='primary' />{' '}\r\n                    <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nStaticProfile.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(StaticProfile);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport Scream from \"../components/scream/Scream\";\r\nimport StaticProfile from \"../components/profile/StaticProfile\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n// import ScreamSkeleton from '../util/ScreamSkeleton';\r\n// import ProfileSkeleton from '../util/ProfileSkeleton';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getUserData } from \"../redux/actions/dataActions\";\r\nclass user extends Component {\r\n  state = {\r\n    profile: null,\r\n    screamIdParam: null,\r\n  };\r\n  componentDidMount() {\r\n    const handle = this.props.match.params.handle;\r\n    const screamId = this.props.match.params.screamId;\r\n\r\n    if (screamId) this.setState({ screamIdParam: screamId });\r\n\r\n    this.props.getUserData(handle);\r\n    axios\r\n      .get(`/user/${handle}`)\r\n      .then((res) => {\r\n        this.setState({\r\n          profile: res.data.user,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  render() {\r\n    const { screams, loading } = this.props.data;\r\n    const { screamIdParam } = this.state;\r\n\r\n    const screamsMarkup = loading ? (\r\n      <p>Loading</p>\r\n    ) : screams === null ? (\r\n      <p>No screams from this user</p>\r\n    ) : !screamIdParam ? (\r\n      screams.map((scream) => <Scream key={scream.screamId} scream={scream} />)\r\n    ) : (\r\n      screams.map((scream) => {\r\n        if (scream.screamId !== screamIdParam)\r\n          return <Scream key={scream.screamId} scream={scream} />;\r\n        else return <Scream key={scream.screamId} scream={scream} openDialog />;\r\n      })\r\n    );\r\n\r\n    return (\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} sm={8} xs={12}>\r\n          {screamsMarkup}\r\n        </Grid>\r\n        <Grid item sm={4} xs={12}>\r\n          {this.state.profile === null ? (\r\n            <p>loading</p>\r\n          ) : (\r\n            <StaticProfile profile={this.state.profile} />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nuser.propTypes = {\r\n  getUserData: PropTypes.func.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data,\r\n  errors: state.UI,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserData })(user);\r\n","import {\r\n    SET_USER,\r\n    SET_ERRORS,\r\n    CLEAR_ERRORS,\r\n    LOADING_UI,\r\n    LOADING_USER,\r\n    SET_AUTHENTICATED,\r\n    SET_UNAUTHENTICATED,\r\n    LIKE_SCREAM,\r\n    UNLIKE_SCREAM,\r\n} from '../types';\r\n\r\nconst initalState = {\r\n    authenticated: false,\r\n    credentials: {},\r\n    loading: false,\r\n    likes: [],\r\n    notifications: [],\r\n};\r\n\r\nexport default function (state = initalState, action) {\r\n    switch (action.type) {\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n            return initalState;\r\n\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload,\r\n            };\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case LIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes: [\r\n                    ...state.likes,\r\n                    {\r\n                        userHandle: state.credentials.handle,\r\n                        screamId: action.payload.screamId,\r\n                    },\r\n                ],\r\n            };\r\n        case UNLIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes: state.likes.filter(\r\n                    (like) => like.screamId !== action.payload.screamId\r\n                ),\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    SET_SCREAMS,\r\n    LIKE_SCREAM,\r\n    UNLIKE_SCREAM,\r\n    LOADING_DATA,\r\n    DELETE_SCREAM,\r\n    POST_SCREAM,\r\n    SET_SCREAM,\r\n    SUBMIT_COMMENT,\r\n} from '../types';\r\nconst initialState = {\r\n    screams: [],\r\n    scream: {},\r\n    loading: false,\r\n};\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case SET_SCREAMS:\r\n            return {\r\n                ...state,\r\n                screams: action.payload,\r\n                loading: false,\r\n            };\r\n        case SET_SCREAM:\r\n            return {\r\n                ...state,\r\n                scream: action.payload,\r\n            };\r\n        case LIKE_SCREAM:\r\n        case UNLIKE_SCREAM:\r\n            let index = state.screams.findIndex(\r\n                (scream) => scream.screamId === action.payload.screamId\r\n            );\r\n            state.screams[index] = action.payload;\r\n            if (state.scream.screamId === action.payload.screamId) {\r\n                state.scream = action.payload;\r\n            }\r\n            return {\r\n                ...state,\r\n            };\r\n        case DELETE_SCREAM:\r\n            index = state.screams.findIndex(\r\n                (scream) => scream.screamId === action.payload\r\n            );\r\n            state.screams.splice(index, 1);\r\n            return {\r\n                ...state,\r\n            };\r\n        case POST_SCREAM:\r\n            return {\r\n                ...state,\r\n                screams: [action.payload, ...state.screams],\r\n            };\r\n        case SUBMIT_COMMENT:\r\n            return {\r\n                ...state,\r\n                scream: {\r\n                    ...state.scream,\r\n                    comments: [action.payload, ...state.scream.comments],\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    SET_ERRORS,\r\n    CLEAR_ERRORS,\r\n    LOADING_UI,\r\n    STOP_LOADING_UI,\r\n} from '../types';\r\n\r\nconst initalState = {\r\n    loading: false,\r\n    errors: null,\r\n};\r\nexport default function (state = initalState, action) {\r\n    switch (action.type) {\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload,\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: null,\r\n            };\r\n\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case STOP_LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nconst intialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer,\r\n});\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    intialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport CreateMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport jwtDecode from \"jwt-decode\";\n\nimport home from \"./pages/home\";\nimport login from \"./pages/login\";\nimport signup from \"./pages/signup\";\nimport Navbar from \"./components/layout/navbar\";\nimport AuthRoute from \"./util/AuthRoute\";\nimport User from \"./pages/user\";\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { SET_AUTHENTICATED } from \"./redux/types\";\nimport { logoutUser, getUserData } from \"./redux/actions/userActions\";\nimport axios from \"axios\";\n\nconst theme = CreateMuiTheme({\n  palette: {\n    primary: {\n      light: \"#33c9dc\",\n      main: \"#00bcd4\",\n      dark: \"#008394\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff6333\",\n      main: \"#ff3d00\",\n      dark: \"#b22a00\",\n      contrastText: \"#fff\",\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n  spreadThis: {\n    form: {\n      textAlign: \"center\",\n    },\n    image: {\n      margin: \"20px auto 20px auto\",\n    },\n    pageTitle: {\n      margin: \"10px auto 10px auto\",\n    },\n    textField: {\n      margin: \"10px auto 10px auto\",\n    },\n    button: {\n      marginTop: 20,\n      position: \"relative\",\n    },\n    customError: {\n      color: \"red\",\n      fontSize: \"0.8rem\",\n      marginTop: 10,\n    },\n    progress: {\n      position: \"absolute\",\n    },\n    invisibleSeparator: {\n      border: \"none\",\n      margin: 4,\n    },\n    visibleSeparator: {\n      width: \"100%\",\n      borderBottom: \"1px solid rgba(0,0,0,0.1)\",\n      marginBottom: 20,\n    },\n    paper: {\n      padding: 20,\n    },\n    profile: {\n      \"& .image-wrapper\": {\n        textAlign: \"center\",\n        position: \"relative\",\n        \"& button\": {\n          position: \"absolute\",\n          top: \"80%\",\n          left: \"70%\",\n        },\n      },\n      \"& .profile-image\": {\n        width: 200,\n        height: 200,\n        objectFit: \"cover\",\n        maxWidth: \"100%\",\n        borderRadius: \"50%\",\n      },\n      \"& .profile-details\": {\n        textAlign: \"center\",\n        \"& span, svg\": {\n          verticalAlign: \"middle\",\n        },\n        \"& a\": {\n          color: \"#00bcd4\",\n        },\n      },\n      \"& hr\": {\n        border: \"none\",\n        margin: \"0 0 10px 0\",\n      },\n      \"& svg.button\": {\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n      },\n    },\n    buttons: {\n      textAlign: \"center\",\n      \"& a\": {\n        margin: \"20px 10px\",\n      },\n    },\n  },\n});\naxios.defaults.baseURL =\n  \"https://us-central1-socialapp-7aba4.cloudfunctions.net/api\";\nconst token = localStorage.FBIdToken;\nconsole.log(token);\nif (token) {\n  const decodedToken = jwtDecode(token);\n  console.log(decodedToken);\n  if (decodedToken.exp * 1000 < Date.now()) {\n    window.location.href = \"/login\";\n    store.dispatch(logoutUser());\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common[\"Authorization\"] = token;\n    store.dispatch(getUserData());\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <Navbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={home} />\n                <AuthRoute exact path=\"/login\" component={login} />\n                <AuthRoute exact path=\"/signup\" component={signup} />\n                <Route exact path=\"/users/:handle\" component={User} />\n              </Switch>\n            </div>\n          </Router>\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/favicon.6e1267d9.ico\";"],"sourceRoot":""}